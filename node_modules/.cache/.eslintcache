[{"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/index.js":"1","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/reportWebVitals.js":"2","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/App.js":"3","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Authantication/Login/Login.js":"4","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/store.js":"5","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/SignIn.js":"6","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/roleSlice.js":"7","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/userDetailsSlice.js":"8","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/loadingNotice.js":"9","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/dashboardSlice.js":"10","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/GpsTagSlice.js":"11","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/MapSlice.js":"12","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/planningSlice.js":"13","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/parkingSlice.js":"14","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/updatedGetSlices.js":"15","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Authantication/SignUp/Signup.js":"16","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/SignUp.js":"17","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Authantication/OtpVerification/EmailOtpVerification.js":"18","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Components/LoadingSpinner/LoadingSpinner.js":"19"},{"size":550,"mtime":1698218741542,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1697449993996,"results":"22","hashOfConfig":"21"},{"size":780,"mtime":1698234154061,"results":"23","hashOfConfig":"21"},{"size":4745,"mtime":1698297524564,"results":"24","hashOfConfig":"21"},{"size":1024,"mtime":1698233228137,"results":"25","hashOfConfig":"21"},{"size":2216,"mtime":1698238406867,"results":"26","hashOfConfig":"21"},{"size":5661,"mtime":1698218583228,"results":"27","hashOfConfig":"21"},{"size":8334,"mtime":1698218583228,"results":"28","hashOfConfig":"21"},{"size":15872,"mtime":1698218583228,"results":"29","hashOfConfig":"21"},{"size":6370,"mtime":1698218583228,"results":"30","hashOfConfig":"21"},{"size":8772,"mtime":1698218583224,"results":"31","hashOfConfig":"21"},{"size":1680,"mtime":1698218583224,"results":"32","hashOfConfig":"21"},{"size":22806,"mtime":1698218583228,"results":"33","hashOfConfig":"21"},{"size":7823,"mtime":1698218583228,"results":"34","hashOfConfig":"21"},{"size":3991,"mtime":1698218583228,"results":"35","hashOfConfig":"21"},{"size":8589,"mtime":1698297536305,"results":"36","hashOfConfig":"21"},{"size":1412,"mtime":1698233153041,"results":"37","hashOfConfig":"21"},{"size":3466,"mtime":1698236163657,"results":"38","hashOfConfig":"21"},{"size":1154,"mtime":1698238002122,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1hfrr0",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"43"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"43"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"43"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"43"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"43"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/index.js",[],[],["109"],"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/reportWebVitals.js",[],[],"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/App.js",["110","111","112"],[],"import logo from './logo.svg';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport './App.css'; \nimport { Route, Routes } from \"react-router-dom\";\nimport Login from \"../src/Authantication/Login/Login\";\nimport Signup from './Authantication/SignUp/Signup';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport EmailOtpVerification from './Authantication/OtpVerification/EmailOtpVerification';\n\nfunction App() {\n  return (\n    \n    \n    <Routes>\n    <Route path=\"/\" element={<Login />}></Route>\n    <Route path=\"/emailotpverification\" element={<EmailOtpVerification />}></Route>\n    <Route path=\"/signup\" element={<Signup />}></Route>\n  </Routes>\n  );\n}\n\nexport default App;\n  ","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Authantication/Login/Login.js",["113","114","115","116","117","118"],[],"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/store.js",[],[],"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/SignIn.js",["119"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nlet BearerToken = reactLocalStorage.get(\"Token\", false)\r\n    \r\n// SignIn\r\n\r\nexport const SignIn = createAsyncThunk(\"SignIn\",async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(`${process.env.REACT_APP_BASE_URL}user_auth/signin/`,body);\r\n      toast.success(\"Successful\");\r\n      reactLocalStorage.set(\"Token\",response?.data?.token?.original?.access_token);\r\n      // reactLocalStorage.set(\"id\",response?.data?.currentUser?.user_id);\r\n      // reactLocalStorage.set(\"name\",response?.data?.currentUser?.user_name);\r\n      // reactLocalStorage.set(\"email\",response?.data?.currentUser?.user_email);\r\n      // reactLocalStorage.set(\"employee_id\",response?.data?.currentUser?.employee_id);\r\n      // reactLocalStorage.set(\"national_id\",response?.data?.currentUser?.national_id);\r\n      // reactLocalStorage.set(\"role_id\",response?.data?.currentUser?.role_id);\r\n      // reactLocalStorage.set(\"role_name\",response?.data?.currentUser?.role_name);\r\n\r\n      // let Permission =  JSON.stringify(response?.data?.currentUser?.permissions);\r\n      // reactLocalStorage.set(\"Permissions\",Permission);\r\n      // console.log(\"Permissions\",Permission)\r\n\r\n      return response;\r\n\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n// SignOut \r\n\r\n \r\n\r\n \r\n\r\n\r\n// Reducer\r\n\r\nexport const signIn = createSlice({\r\n  name: \"signIn\",\r\n  initialState: {\r\n    data: [],  \r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(SignIn.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(SignIn.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.data.push(action.payload);\r\n      }\r\n      )\r\n\r\n      .addCase(SignIn.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n       \r\n\r\n       \r\n  },\r\n\r\n});\r\n\r\nexport default signIn.reducer;\r\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/roleSlice.js",["120","121","122"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nlet BearerToken = reactLocalStorage.get(\"Token\", false)\r\n\r\n// Get Role\r\n\r\nexport const getRole = createAsyncThunk(\"getRole\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.get(`${process.env.REACT_APP_BASE_URL}/api/roles/get?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    });\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n// Create role\r\n\r\nexport const createRole = createAsyncThunk(\"createRole\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.post(`${process.env.REACT_APP_BASE_URL}/api/roles/create`, body, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    });\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n\r\n  } catch (err) {\r\n    err?.response?.data?.message?.map((item) => {\r\n      toast.error(item?.role_name);\r\n    })\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n// udate role\r\n\r\nexport const updateRole = createAsyncThunk(\"updateRole\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.put(`${process.env.REACT_APP_BASE_URL}/api/roles/update/${body.id}`, body, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    });\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    // .map((item)=>{\r\n    // toast.error(item?.role_name);\r\n    // })\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n// delete Role\r\n\r\nexport const deleteRole = createAsyncThunk(\"deleteRole\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.delete(`${process.env.REACT_APP_BASE_URL}/api/roles/delete/${body.id}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    });\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n//\r\n//Export Role\r\nexport const exportRole = createAsyncThunk(\r\n  \"ExportRoles\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/export-roles`,\r\n        {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n// Reducer\r\n\r\nexport const Role = createSlice({\r\n  name: \"Role\",\r\n  initialState: {\r\n    allRoles: [],\r\n    createdRoles: [],\r\n    updatedRoles: [],\r\n    deletedRoles: [],\r\n    exportRolesData: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      // get Role\r\n\r\n      .addCase(getRole.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(getRole.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"getRole \", payload?.data)\r\n        state.allRoles = payload?.data;\r\n      })\r\n\r\n      .addCase(getRole.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // create role\r\n\r\n      .addCase(createRole.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(createRole.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"createRole \", payload)\r\n        state.createdRoles = payload;\r\n      })\r\n\r\n      .addCase(createRole.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //update Role \r\n\r\n      .addCase(updateRole.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(updateRole.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"updateRole \", payload)\r\n        state.updatedRoles = payload;\r\n      })\r\n\r\n      .addCase(updateRole.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // Delete Role\r\n\r\n      .addCase(deleteRole.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(deleteRole.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"deleteRole \", payload)\r\n        state.deletedRoles = payload;\r\n      })\r\n\r\n      .addCase(deleteRole.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //Export  Role\r\n\r\n      .addCase(exportRole.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(exportRole.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"exportRole ==>\", payload)\r\n        state.exportRolesData = payload;\r\n      })\r\n\r\n      .addCase(exportRole.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n  },\r\n\r\n});\r\n\r\nexport default Role.reducer;\r\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/userDetailsSlice.js",["123","124","125","126","127","128","129","130","131","132"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nlet BearerToken = reactLocalStorage.get(\"Token\", false);\r\n\r\nexport const createUser = createAsyncThunk(\r\n  \"createUser\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/users/create`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.name) ;\r\n        toast.error(item?.email);\r\n        toast.error(item?.employee_id);\r\n        toast.error(item?.national_id);\r\n        toast.error(item?.message);\r\n      });\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n// get user\r\n\r\nexport const getUser = createAsyncThunk(\r\n  \"getUser\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/users/get?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n// update user\r\n\r\nexport const updateUser = createAsyncThunk(\r\n  \"updateUser\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${process.env.REACT_APP_BASE_URL}/api/users/update/${body?.id}`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      toast.error(err?.response?.data?.message?.email[0]);\r\n      toast.error(err?.response?.data?.message?.employee_id[0]);\r\n      toast.error(err?.response?.data?.message?.national_id[0]);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n// delete user\r\n\r\nexport const deleteUser = createAsyncThunk(\r\n  \"deleteUser\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `${process.env.REACT_APP_BASE_URL}/api/users/delete`,\r\n        {\r\n          data: body,\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//Export User\r\nexport const exportUser = createAsyncThunk(\r\n  \"ExportUser\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/export-users`,\r\n        {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n// import User\r\n\r\nexport const importUser = createAsyncThunk(\r\n  \"importUser\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/users/import-users`, body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      const dataArray = err?.response?.data?.message.map((item, key) => {\r\n        return {\r\n          name:item.name,\r\n          email: item.email,\r\n          employee_id: item.employee_id,\r\n          national_id: item.national_id,\r\n          role: item.role,\r\n        };\r\n      });\r\n\r\n      dataArray.map((item, index) => {\r\n        item.name != undefined && toast.error(`Name: ${item.name}`);\r\n        item.email != undefined && toast.error(`Email: ${item.email}`);\r\n        item.employee_id != undefined && toast.error(`Employee ID: ${item.employee_id}`);\r\n        item.national_id != undefined && toast.error(`National ID: ${item.national_id}`);\r\n        item.role != undefined && toast.error(`Role: ${item.role}`);\r\n      });\r\n\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport const userDetail = createSlice({\r\n  name: \"userDetail\",\r\n  initialState: {\r\n    allUsers: [],\r\n    createdUsers: [],\r\n    updatedUser: [],\r\n    deletedUser: [],\r\n    exportUserData: [],\r\n    ImportedUsers: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      // get user\r\n\r\n      .addCase(getUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n\r\n      .addCase(getUser.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"getUser\", payload?.data);\r\n        state.allUsers = payload?.data;\r\n      })\r\n\r\n      .addCase(getUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // create user\r\n\r\n      .addCase(createUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n\r\n      .addCase(createUser.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"createdUsers\", payload?.data?.data);\r\n        state.createdUsers = payload;\r\n      })\r\n\r\n      .addCase(createUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // edit user\r\n\r\n      .addCase(updateUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n\r\n      .addCase(updateUser.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"updatedUser\", payload?.data?.data);\r\n        state.updatedUser = payload;\r\n      })\r\n\r\n      .addCase(updateUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // delete user\r\n\r\n      .addCase(deleteUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n\r\n      .addCase(deleteUser.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"updatedUser\", payload?.data?.data);\r\n        state.deletedUser = payload;\r\n      })\r\n\r\n      .addCase(deleteUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //Export User\r\n      .addCase(exportUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n\r\n      .addCase(exportUser.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"updatedUser\", payload?.data?.data);\r\n        state.exportUserData = payload;\r\n      })\r\n\r\n      .addCase(exportUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // import User\r\n\r\n      .addCase(importUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n\r\n      .addCase(importUser.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"ImportedUsers\", payload?.data?.data);\r\n        state.ImportedUsers = payload|| [];\r\n      })\r\n\r\n      .addCase(importUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n\r\n  },\r\n});\r\n\r\nexport default userDetail.reducer;\r\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/loadingNotice.js",["133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nlet BearerToken = reactLocalStorage.get(\"Token\", false);\n\n// Get Driver\n\nexport const getLodingEntity = createAsyncThunk(\n  \"getLodingEntity\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_BASE_URL}/api/loading-entity/get?page=*`,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// get product\n\nexport const getProduct = createAsyncThunk(\n  \"getProduct\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_BASE_URL}/api/products/get?page=${body?.page == undefined ? 1 : body?.page\n        }&search=${body?.search == undefined ? \"\" : body?.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// create loading noitce\n\nexport const createLoadingNotice = createAsyncThunk(\n  \"createLoadingNotice\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/api/loading-notice/create`,\n        body,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      err?.response?.data?.message.map((item) => {\n        toast.error(item?.loading_date);\n        toast.error(item?.client_id);\n        toast.error(item?.loading_entity_id);\n        toast.error(item?.driver_id);\n        toast.error(item?.truck_id);\n        toast.error(item?.product_id);\n        toast.error(item?.tonnage);\n        toast.error(item?.destination);\n      });\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// get Loading Notice\n\nexport const getLoadingNotice = createAsyncThunk(\n  \"getLoadingNotice\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_BASE_URL\n        }/api/loading-notice/get?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search\n        }`,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// Create Product\n\nexport const createProduct = createAsyncThunk(\n  \"createProduct\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/api/products/create`,\n        body,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      err?.response?.data?.message.map((item) => {\n        toast.error(item.name);\n        toast.error(item.color);\n      });\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// Edit Product\n\nexport const editProduct = createAsyncThunk(\n  \"editProduct\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.put(\n        `${process.env.REACT_APP_BASE_URL}/api/products/update/${body?.id}`,\n        body,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      err?.response?.data?.message.map((item) => {\n        toast.error(item.name);\n        toast.error(item.color);\n      });\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// deleteProduct\n\nexport const deleteProduct = createAsyncThunk(\n  \"deleteProduct\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.delete(\n        `${process.env.REACT_APP_BASE_URL}/api/products/delete`,\n        {\n          data: body,\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          }\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      err?.response?.data?.message?.map((item) => {\n        toast.error(item?.capacity);\n      });\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// edit notice\n\nexport const editLoadingNotice = createAsyncThunk(\n  \"editLoadingNotice\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.put(\n        `${process.env.REACT_APP_BASE_URL}/api/loading-notice/update/${body?.id}`,\n        body,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// delete Notice\n\nexport const deleteLoadingNotice = createAsyncThunk(\n  \"deleteLoadingNotice\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.delete(\n        `${process.env.REACT_APP_BASE_URL}/api/loading-notice/delete/${body?.id}`,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      return rejectWithValue(err);\n    }\n  }\n);\n\n//\nexport const exportProduct = createAsyncThunk(\n  \"ExportProduct\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(\n        `${process.env.REACT_APP_BASE_URL}/api/export-products`,\n        {\n          responseType: \"arraybuffer\",\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      return rejectWithValue(err);\n    }\n  }\n);\n\n//Import Product\nexport const importProduct = createAsyncThunk(\n  \"importProduct\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/api/products/import-product`, body,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      console.log(\"sssssssss\", err?.response?.data?.message)\n      const dataArray = err?.response?.data?.message.map((item, key) => {\n        return {\n          name: item.name,\n          color: item.color,\n        };\n      });\n\n      // Now you can use map to iterate through the dataArray\n      dataArray.map((item, index) => {\n        item.name != undefined && toast.error(`Name: ${item.name}`);\n        item.color != undefined && toast.error(`Color: ${item.color}`);\n      });\n\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// Import LoadingNotice\nexport const importLoadingNotice = createAsyncThunk(\n  \"importLoadingNotice\",\n  async (body, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(\n        `${process.env.REACT_APP_BASE_URL}/api/loading-notice/import-loading-notice`, body,\n        {\n          headers: {\n            Authorization: `Bearer ${BearerToken}`,\n          },\n        }\n      );\n      toast.success(response?.data?.message);\n      return response;\n    } catch (err) {\n      const dataArray = err?.response?.data?.message.map((item, key) => {\n        return {\n          loading_date: item.loading_date,\n          customer_type: item.customer_type,\n          destination: item.destination,\n          tonnage: item.tonnage,\n          client_name: item.client_name,\n          driver_cin: item.driver_cin,\n          driver_contact: item.driver_contact,\n          loading_entity: item.loading_entity,\n          truck_registration_no: item.truck_registration_no,\n          product_name: item.product_name,\n        };\n      });\n\n      dataArray.map((item, index) => {\n        item.loading_date != undefined && toast.error(`Loading Date: ${item.loading_date}`);\n        item.customer_type != undefined && toast.error(`Customer Type: ${item.customer_type}`);\n        item.destination != undefined && toast.error(`Destination: ${item.destination}`);\n        item.tonnage != undefined && toast.error(`Tonnage: ${item.tonnage}`);\n        item.client_name != undefined && toast.error(`Client Name: ${item.client_name}`);\n        item.driver_cin != undefined && toast.error(`Driver Cin: ${item.driver_cin}`);\n        item.driver_contact != undefined && toast.error(`Driver Contact: ${item.driver_contact}`);\n        item.loading_entity != undefined && toast.error(`Loading Entity: ${item.loading_entity}`);\n        item.truck_registration_no != undefined && toast.error(`Truck Reg. No.: ${item.truck_registration_no}`);\n        item.product_name != undefined && toast.error(`Product Name: ${item.product_name}`);\n      });\n      return rejectWithValue(err);\n    }\n  }\n);\n\n// Reducer \n\nexport const LoadingNotice = createSlice({\n  name: \"LoadingNotice\",\n  initialState: {\n    allLodingEntity: [],\n    allProduct: [],\n    createdLodingNotice: [],\n    allNotices: [],\n    createdProducts: [],\n    allEditedNoitce: [],\n    deletedNotice: [],\n    allEditedProducts: [],\n    allDeletedProduct: [],\n    exportProductData: [],\n    importProductData: [],\n    importLoadingData: [],\n    loading: false,\n    error: null,\n  },\n\n  extraReducers: (builder) => {\n    builder\n\n      // get Driver\n\n      .addCase(getLodingEntity.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(getLodingEntity.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"getLodingEntity \", payload?.data);\n        state.allLodingEntity = payload?.data;\n      })\n\n      .addCase(getLodingEntity.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(getProduct.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(getProduct.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"getProduct \", payload?.data);\n        state.allProduct = payload?.data;\n      })\n\n      .addCase(getProduct.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(createLoadingNotice.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(createLoadingNotice.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"createLoadingNotice \", payload?.data);\n        state.createdLodingNotice = payload?.data;\n      })\n\n      .addCase(createLoadingNotice.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(getLoadingNotice.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(getLoadingNotice.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"getLoadingNotice \", payload?.data);\n        state.allNotices = payload?.data;\n      })\n\n      .addCase(getLoadingNotice.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(createProduct.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(createProduct.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"createProduct \", payload?.data);\n        state.createdProducts = payload?.data;\n      })\n\n      .addCase(createProduct.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(editProduct.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(editProduct.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"editProduct \", payload?.data);\n        state.allEditedProducts = payload?.data;\n      })\n\n      .addCase(editProduct.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(deleteProduct.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(deleteProduct.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"deleteProduct \", payload?.data);\n        state.allDeletedProduct = payload?.data;\n      })\n\n      .addCase(deleteProduct.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(editLoadingNotice.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(editLoadingNotice.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"editLoadingNotice \", payload?.data);\n        state.allEditedNoitce = payload?.data;\n      })\n\n      .addCase(editLoadingNotice.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      .addCase(deleteLoadingNotice.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(deleteLoadingNotice.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"deleteLoadingNotice \", payload?.data);\n        state.deletedNotice = payload?.data;\n      })\n\n      .addCase(deleteLoadingNotice.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      //Export Products\n      .addCase(exportProduct.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(exportProduct.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"exportProduct \", payload?.data);\n        state.exportProductData = payload?.data;\n      })\n\n      .addCase(exportProduct.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      // Import Products\n      .addCase(importProduct.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(importProduct.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"importProduct \", payload?.data);\n        state.importProductData = payload?.data;\n      })\n\n      .addCase(importProduct.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      })\n\n      // Import Loading Notice\n      .addCase(importLoadingNotice.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(importLoadingNotice.fulfilled, (state, { payload }) => {\n        state.loading = false;\n        console.log(\"importLoadingNotice \", payload?.data);\n        state.importLoadingData = payload?.data;\n      })\n\n      .addCase(importLoadingNotice.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      });\n  },\n});\n\nexport default LoadingNotice.reducer;\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/dashboardSlice.js",[],[],"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/GpsTagSlice.js",["155","156","157","158","159","160","161"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nlet BearerToken = reactLocalStorage.get(\"Token\", false);\r\n\r\n// create gps\r\n\r\nexport const createGPSDevice = createAsyncThunk(\r\n  \"createGPSDevice\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/device/create`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      err?.response?.data?.message?.map((item)=>{\r\n        toast.error(item.tag_id);\r\n        toast.error(item.tag_number);\r\n        toast.error(item.battery_status);\r\n        toast.error(item.latitude);\r\n        toast.error(item.longitude);\r\n      })\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//get gps\r\n\r\nexport const getGPSDevice = createAsyncThunk(\r\n  \"getGPSDevice\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/device/get?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search\r\n        }`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      console.log(\"err?.response?.data?=>\", err?.response?.data);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//update gps\r\n\r\nexport const updateGPSDevice = createAsyncThunk(\r\n  \"updateGPSDevice\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${process.env.REACT_APP_BASE_URL}/api/device/update/${body?.id}`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.tag_id);\r\n        toast.error(item?.tag_number);\r\n      });\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n// delete gps\r\n\r\nexport const deleteGPSDevices = createAsyncThunk(\r\n  \"deleteGPSDevices\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `${process.env.REACT_APP_BASE_URL}/api/device/delete`,\r\n        {\r\n          data: body,\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//Gps Assignment\r\n\r\nexport const getGpsAssignment = createAsyncThunk(\r\n  \"getGpsAssigment\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/device/assigndata?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//Assign Gps\r\nexport const assignGpsDevice = createAsyncThunk(\r\n  \"assignGpsDevice\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${process.env.REACT_APP_BASE_URL}/api/device/assign/${body?.tagId == undefined ? 0 : body?.tagId\r\n        }`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const removeAssignedGPS = createAsyncThunk(\r\n  'removeAssignedGPS',\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        'http://13.233.139.117/api/device/assignlist',\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const GPSManagement = createSlice({\r\n  name: \"GPSManagement\",\r\n  initialState: {\r\n    createdGPSDevices: [],\r\n    allGPSDevices: [],\r\n    updatedGPSDevices: [],\r\n    deletedGPSDevices: [],\r\n    gpsAssignedData: [],\r\n    assignedDeviceData: [],\r\n    removedAssignGPS:[],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      .addCase(createGPSDevice.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(createGPSDevice.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"createdGPSDevices \", payload?.data);\r\n        state.createdGPSDevices = payload?.data;\r\n      })\r\n\r\n      .addCase(createGPSDevice.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      .addCase(getGPSDevice.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(getGPSDevice.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"allGPSDevices \", payload?.data);\r\n        state.allGPSDevices = payload?.data;\r\n      })\r\n\r\n      .addCase(getGPSDevice.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      .addCase(updateGPSDevice.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(updateGPSDevice.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"updatedGPSDevices \", payload?.data);\r\n        state.updatedGPSDevices = payload?.data;\r\n      })\r\n\r\n      .addCase(updateGPSDevice.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      .addCase(deleteGPSDevices.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(deleteGPSDevices.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"deletedGPSDevices \", payload?.data);\r\n        state.deletedGPSDevices = payload?.data;\r\n      })\r\n\r\n      .addCase(deleteGPSDevices.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      //Get GPs Assign Device\r\n      .addCase(getGpsAssignment.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(getGpsAssignment.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"deletedGPSDevices \", payload?.data);\r\n        state.gpsAssignedData = payload?.data;\r\n      })\r\n\r\n      .addCase(getGpsAssignment.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //assignedDeviceData\r\n      .addCase(assignGpsDevice.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(assignGpsDevice.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"assignedDeviceData \", payload?.data);\r\n        state.assignedDeviceData = payload?.data;\r\n      })\r\n\r\n      .addCase(assignGpsDevice.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(removeAssignedGPS.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(removeAssignedGPS.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"removedAssignGPS \", payload?.data);\r\n        state.removedAssignGPS = payload?.data;\r\n      })\r\n\r\n      .addCase(removeAssignedGPS.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default GPSManagement.reducer;\r\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/MapSlice.js",[],[],"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/planningSlice.js",["162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nlet BearerToken = reactLocalStorage.get(\"Token\", false);\r\n\r\nconsole.log(\"BearerToken===>\", BearerToken)\r\n\r\n// Get Driver\r\nexport const getDriver = createAsyncThunk(\"getDriver\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}/api/drivers/get?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n//Create Driver\r\nexport const createDriver = createAsyncThunk(\r\n  \"createDriver\",\r\n  async (body, { rejectWithValue }) => {\r\n    console.log(\"BODY\", body)\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/drivers/create`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.name);\r\n        toast.error(item?.cin_number);\r\n        toast.error(item?.contact);\r\n      })\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//Edit Driver\r\nexport const editDriver = createAsyncThunk(\"editDriver\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    console.log(\"body====>\", body);\r\n    const response = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}/api/drivers/update/${body?.id}`, body, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    err?.response?.data?.message?.map((item) => {\r\n      toast.error(item?.cin_number);\r\n      toast.error(item?.contact);\r\n    })\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n//Delete Driver\r\nexport const deleteDriver = createAsyncThunk(\"deleteDriver\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    console.log(\"body\", body);\r\n    const response = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}/api/drivers/delete`,\r\n      {\r\n        data: body,\r\n        headers: {\r\n          Authorization: `Bearer ${BearerToken}`,\r\n        },\r\n      }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n//===============Viechle Management===========//\r\n\r\n// Get Vehichle\r\nexport const getVehicle = createAsyncThunk(\"getVehicle\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}/api/trucks/get?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    // toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n// Create Vehicle\r\nexport const createVehicle = createAsyncThunk(\r\n  \"createVehicle\",\r\n  async (body, { rejectWithValue }) => {\r\n    console.log(\"BODY\", body)\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/trucks/create`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.registration_name);\r\n        toast.error(item?.description);\r\n      })\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n// Edit Vehicle\r\nexport const editVehicle = createAsyncThunk(\"editVehicle\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    console.log(\"body====>\", body);\r\n    const response = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}/api/trucks/update/${body?.id}`, body, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n\r\n    toast.error(err?.response?.data?.message);\r\n    err?.response?.data?.message?.map((item) => {\r\n      toast.error(item?.registration_no);\r\n    })\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n//Delete Vechicle\r\nexport const deleteVehicle = createAsyncThunk(\"deleteVehicle\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}/api/trucks/delete`, {\r\n      data: body,\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n\r\n// ============Client ====================//\r\nexport const getClients = createAsyncThunk(\"getClients\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.get(\r\n      `${process.env.REACT_APP_BASE_URL}/api/clients/get?page=${body?.page == undefined ? 1 : body?.page}&search=${body?.search == undefined ? \"\" : body?.search}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n//==========Create Client=========//\r\nexport const createClient = createAsyncThunk(\r\n  \"createClient\",\r\n  async (body, { rejectWithValue }) => {\r\n    console.log(\"BODY\", body)\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/clients/create`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.name);\r\n      })\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//==========Edit CLient==========//\r\nexport const editClient = createAsyncThunk(\"editClient\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    console.log(\"body====>\", body);\r\n    const response = await axios.put(\r\n      `${process.env.REACT_APP_BASE_URL}/api/clients/update/${body?.id}`, body, {\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    err?.response?.data?.message?.map((item) => {\r\n      toast.error(item?.name);\r\n    })\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n// ======== Delete Client =============//\r\nexport const deleteClient = createAsyncThunk(\"deleteClient\", async (body, { rejectWithValue }) => {\r\n  try {\r\n    const response = await axios.delete(\r\n      `${process.env.REACT_APP_BASE_URL}/api/clients/delete`, {\r\n      data: body,\r\n      headers: {\r\n        Authorization: `Bearer ${BearerToken}`,\r\n      },\r\n    }\r\n    );\r\n    toast.success(response?.data?.message);\r\n    return response;\r\n  } catch (err) {\r\n    toast.error(err?.response?.data?.message);\r\n    return rejectWithValue(err);\r\n  }\r\n}\r\n);\r\n\r\n//EXPORT DRIVER\r\nexport const exportDriver = createAsyncThunk(\r\n  \"ExportDriver\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/export-driver`,\r\n        {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n// EXPORT TRUCK\r\nexport const exportTruck = createAsyncThunk(\r\n  \"ExportTrucks\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/export-trucks`,\r\n        {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n//Export CLient1\r\nexport const exportClient = createAsyncThunk(\r\n  \"ExportClients\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/export-clients`,\r\n        {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n//import Driver\r\nexport const importDriver = createAsyncThunk(\r\n  \"importDriver\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/drivers/import-driver`, body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      console.log(\"sssssssss\", err?.response?.data?.message)\r\n      const dataArray = err?.response?.data?.message.map((item, key) => {\r\n        return {\r\n          national_id: item.cin_number,\r\n          contact: item.contact,\r\n          description: item.description,\r\n        };\r\n      });\r\n\r\n      // Now you can use map to iterate through the dataArray\r\n      dataArray.map((item, index) => {\r\n        item.national_id != undefined && toast.error(`National ID: ${item.national_id}`);\r\n        item.contact != undefined && toast.error(`Contact: ${item.contact}`);\r\n        item.description != undefined && toast.error(`Description: ${item.description}`);\r\n      });\r\n\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport const importVehicle = createAsyncThunk(\r\n  \"importVehicle\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/trucks/import-truck`, body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      console.log(\"sssssssss\", err?.response?.data?.message)\r\n      const dataArray = err?.response?.data?.message.map((item, key) => {\r\n        return {\r\n          registration_no:item.registration_no,\r\n          description: item.description,\r\n        };\r\n      });\r\n\r\n      // Now you can use map to iterate through the dataArray\r\n      dataArray.map((item, index) => {\r\n        item.registration_no != undefined && toast.error(`registration_no: ${item.registration_no}`);\r\n        item.description != undefined && toast.error(`Description: ${item.description}`);\r\n      });\r\n\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport const importClient = createAsyncThunk(\r\n  \"importClient\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/clients/import-client`, body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      console.log(\"sssssssss\", err?.response?.data?.message)\r\n      const dataArray = err?.response?.data?.message.map((item, key) => {\r\n        return {\r\n          name:item.name,\r\n          national_id: item.cin_number,\r\n          contact: item.contact,\r\n          description: item.description,\r\n        };\r\n      });\r\n\r\n      // Now you can use map to iterate through the dataArray\r\n      dataArray.map((item, index) => {\r\n        item.name != undefined && toast.error(`Name: ${item.name}`);\r\n        item.national_id != undefined && toast.error(`National ID: ${item.national_id}`);\r\n        item.contact != undefined && toast.error(`Contact: ${item.contact}`);\r\n        item.description != undefined && toast.error(`Description: ${item.description}`);\r\n      });\r\n\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n// Reducer\r\n\r\nexport const Plans = createSlice({\r\n  name: \"Plans\",\r\n  initialState: {\r\n    allDrivers: [],\r\n    createdDriver: [],\r\n    updatedDriver: [],\r\n    deletedDriver: [],\r\n    allVehicles: [],\r\n    createdVehicle: [],\r\n    updatedVehicle: [],\r\n    deletedVehicle: [],\r\n    allClients: [],\r\n    createdClient: [],\r\n    updatedClient: [],\r\n    deletedClient: [],\r\n    exportDriversData: [],\r\n    exportTrucksData: [],\r\n    exportClientsData: [],\r\n    importDriverData: [],\r\n    importVehicleData:[],\r\n    importClientData:[],\r\n    loading: false,\r\n    vehicleLoading: false,\r\n    clientLoading: false,\r\n    error: null,\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      // get Driver\r\n\r\n      .addCase(getDriver.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(getDriver.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"getDriver \", payload?.data);\r\n        state.allDrivers = payload?.data;\r\n      })\r\n\r\n      .addCase(getDriver.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // create Driver\r\n\r\n      .addCase(createDriver.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(createDriver.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"createDriver===> \", payload?.data);\r\n        state.createdDriver = payload;\r\n      })\r\n\r\n      .addCase(createDriver.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // edit Driver\r\n\r\n      .addCase(editDriver.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(editDriver.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"updateDriver===> \", payload?.data);\r\n        state.updatedDriver = payload;\r\n      })\r\n\r\n      .addCase(editDriver.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // Delete Driver\r\n\r\n      .addCase(deleteDriver.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(deleteDriver.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"deletedDriver===> \", payload?.data);\r\n        state.deletedDriver = payload;\r\n      })\r\n\r\n      .addCase(deleteDriver.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // =========get Vehicle Details========//\r\n      .addCase(getVehicle.pending, (state) => {\r\n        state.vehicleLoading = true;\r\n      })\r\n\r\n      .addCase(getVehicle.fulfilled, (state, { payload }) => {\r\n        state.vehicleLoading = false;\r\n        console.log(\"getVehicle \", payload?.data);\r\n        state.allVehicles = payload?.data;\r\n      })\r\n\r\n      .addCase(getVehicle.rejected, (state, action) => {\r\n        state.vehicleLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // ==========Create Vehicle\r\n      .addCase(createVehicle.pending, (state) => {\r\n        state.vehicleLoading = true;\r\n      })\r\n\r\n      .addCase(createVehicle.fulfilled, (state, { payload }) => {\r\n        state.vehicleLoading = false;\r\n        console.log(\"createVehicle \", payload?.data);\r\n        state.createdVehicle = payload;\r\n      })\r\n\r\n      .addCase(createVehicle.rejected, (state, action) => {\r\n        state.vehicleLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      // Edit Vehicle\r\n      .addCase(editVehicle.pending, (state) => {\r\n        state.vehicleLoading = true;\r\n      })\r\n\r\n      .addCase(editVehicle.fulfilled, (state, { payload }) => {\r\n        state.vehicleLoading = false;\r\n        console.log(\"editVehicle \", payload?.data);\r\n        state.updatedVehicle = payload;\r\n      })\r\n\r\n      .addCase(editVehicle.rejected, (state, action) => {\r\n        state.vehicleLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //========deleteVehicle===========//\r\n      .addCase(deleteVehicle.pending, (state) => {\r\n        state.vehicleLoading = true;\r\n      })\r\n\r\n      .addCase(deleteVehicle.fulfilled, (state, { payload }) => {\r\n        state.vehicleLoading = false;\r\n        console.log(\"deleteVehicle \", payload?.data);\r\n        state.deletedVehicle = payload;\r\n      })\r\n\r\n      .addCase(deleteVehicle.rejected, (state, action) => {\r\n        state.vehicleLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //===========get Clients=========//\r\n      .addCase(getClients.pending, (state) => {\r\n        state.clientLoading = true;\r\n      })\r\n\r\n      .addCase(getClients.fulfilled, (state, { payload }) => {\r\n        state.clientLoading = false;\r\n        console.log(\"getClients \", payload?.data);\r\n        state.allClients = payload?.data;\r\n      })\r\n\r\n      .addCase(getClients.rejected, (state, action) => {\r\n        state.clientLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //==========Create Client========//\r\n      .addCase(createClient.pending, (state) => {\r\n        state.clientLoading = true;\r\n      })\r\n\r\n      .addCase(createClient.fulfilled, (state, { payload }) => {\r\n        state.clientLoading = false;\r\n        console.log(\"createClient \", payload?.data);\r\n        state.createdClient = payload;\r\n      })\r\n\r\n      .addCase(createClient.rejected, (state, action) => {\r\n        state.clientLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //=========Update Client========//\r\n      .addCase(editClient.pending, (state) => {\r\n        state.clientLoading = true;\r\n      })\r\n\r\n      .addCase(editClient.fulfilled, (state, { payload }) => {\r\n        state.clientLoading = false;\r\n        console.log(\"editClient \", payload?.data);\r\n        state.updatedClient = payload;\r\n      })\r\n\r\n      .addCase(editClient.rejected, (state, action) => {\r\n        state.clientLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //========Deleted Client=========//\r\n      .addCase(deleteClient.pending, (state) => {\r\n        state.clientLoading = true;\r\n      })\r\n\r\n      .addCase(deleteClient.fulfilled, (state, { payload }) => {\r\n        state.clientLoading = false;\r\n        console.log(\"deleteClient \", payload?.data);\r\n        state.deletedClient = payload;\r\n      })\r\n\r\n      .addCase(deleteClient.rejected, (state, action) => {\r\n        state.clientLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //export Driver\r\n      .addCase(exportDriver.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(exportDriver.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"exportDriver ==>\", payload)\r\n        state.exportDriversData = payload;\r\n      })\r\n\r\n      .addCase(exportDriver.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //export Trcuks\r\n      .addCase(exportTruck.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(exportTruck.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"exportTruck ==>\", payload)\r\n        state.exportTrucksData = payload;\r\n      })\r\n\r\n      .addCase(exportTruck.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //export Clients\r\n      .addCase(exportClient.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(exportClient.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"exportClient ==>\", payload)\r\n        state.exportClientsData = payload;\r\n      })\r\n\r\n      .addCase(exportClient.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //Import Driver\r\n      .addCase(importDriver.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(importDriver.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"importDriver ==>\", payload)\r\n        state.importDriverData = payload;\r\n      })\r\n\r\n      .addCase(importDriver.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n\r\n      //Import Vehicle\r\n      .addCase(importVehicle.pending, (state) => {\r\n        state.vehicleLoading = true;\r\n      })\r\n\r\n      .addCase(importVehicle.fulfilled, (state, { payload }) => {\r\n        state.vehicleLoading = false;\r\n        console.log(\"importVehicle ==>\", payload)\r\n        state.importVehicleData = payload;\r\n      })\r\n\r\n      .addCase(importVehicle.rejected, (state, action) => {\r\n        state.vehicleLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //Import Client\r\n      .addCase(importClient.pending, (state) => {\r\n        state.clientLoading = true;\r\n      })\r\n\r\n      .addCase(importClient.fulfilled, (state, { payload }) => {\r\n        state.clientLoading = false;\r\n        console.log(\"importClient ==>\", payload)\r\n        state.importClientData = payload;\r\n      })\r\n\r\n      .addCase(importClient.rejected, (state, action) => {\r\n        state.clientLoading = false;\r\n        state.error = action.error.message;\r\n      })\r\n  },\r\n});\r\n\r\nexport default Plans.reducer;\r\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/parkingSlice.js",["186","187","188","189","190","191","192","193","194","195","196"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { reactLocalStorage } from \"reactjs-localstorage\";\r\n\r\nlet BearerToken = reactLocalStorage.get(\"Token\", false);\r\n\r\n// Get Driver\r\n\r\nexport const getZone = createAsyncThunk(\r\n  \"getZone\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/zones/get?page=${body?.param == undefined ? 1 : body?.param\r\n        }&search=${body?.search == undefined ? \"\" : body?.search}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport const createZone = createAsyncThunk(\r\n  \"createZone\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/zones/create`,\r\n        body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.capacity);\r\n      });\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport const updateZone = createAsyncThunk(\r\n  \"updateZone\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.put(\r\n        `${process.env.REACT_APP_BASE_URL}/api/zones/update/${body?.id}`, body,\r\n        {\r\n          // data:body,\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.capacity);\r\n      });\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport const deleteZone = createAsyncThunk(\r\n  \"deleteZone\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(\r\n        `${process.env.REACT_APP_BASE_URL}/api/zones/delete`,\r\n        {\r\n          data: body,\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      err?.response?.data?.message?.map((item) => {\r\n        toast.error(item?.capacity);\r\n      });\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\nexport const importZone = createAsyncThunk(\r\n  \"importZone\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${process.env.REACT_APP_BASE_URL}/api/zones/import-zone`, body,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      const dataArray = err?.response?.data?.message.map((item, key) => {\r\n        return {\r\n          capacity: item.capacity,\r\n          latitude: item.latitude,\r\n          longitude: item.longitude,\r\n          range: item.range,\r\n          product: item.product,\r\n        };\r\n      });\r\n\r\n      dataArray.map((item, index) => {\r\n        item.capacity != undefined && toast.error(`capacity: ${item.capacity}`);\r\n        item.longitude != undefined && toast.error(`longitude: ${item.longitude}`);\r\n        item.latitude != undefined && toast.error(`latitude: ${item.latitude}`);\r\n        item.range != undefined && toast.error(`range: ${item.range}`);\r\n        item.product != undefined && toast.error(`product: ${item.product}`);\r\n      });\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const UpdateParking = createAsyncThunk(\r\n  \"UpdateParking\",\r\n  async (body, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${process.env.REACT_APP_BASE_URL}/api/parking/get/${body?.id}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${BearerToken}`,\r\n          },\r\n        }\r\n      );\r\n      toast.success(response?.data?.message);\r\n      return response;\r\n    } catch (err) {\r\n      toast.error(err?.response?.data?.message);\r\n      return rejectWithValue(err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n\r\nexport const Parking = createSlice({\r\n  name: \"Parking\",\r\n  initialState: {\r\n    allZones: [],\r\n    createdZones: [],\r\n    updatedZones: [],\r\n    deletedZones: [],\r\n    importZoneData: [],\r\n    UpdateParkingData:[],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder\r\n\r\n      // get Driver\r\n\r\n      .addCase(getZone.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(getZone.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"getZone \", payload?.data);\r\n        state.allZones = payload?.data;\r\n      })\r\n\r\n      .addCase(getZone.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //CREATE ZONES\r\n      .addCase(createZone.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(createZone.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"createZone \", payload?.data);\r\n        state.createdZones = payload;\r\n      })\r\n\r\n      .addCase(createZone.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //Update Zones\r\n      .addCase(updateZone.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(updateZone.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"updateZone \", payload?.data);\r\n        state.updatedZones = payload;\r\n      })\r\n\r\n      .addCase(updateZone.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //Deleted Zones\r\n      .addCase(deleteZone.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(deleteZone.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"deleteZone \", payload?.data);\r\n        state.deletedZones = payload;\r\n      })\r\n\r\n      .addCase(deleteZone.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      //Import Zone\r\n      .addCase(importZone.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(importZone.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"importZone \", payload?.data);\r\n        state.importZoneData = payload;\r\n      })\r\n\r\n      .addCase(importZone.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n\r\n      .addCase(UpdateParking.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n\r\n      .addCase(UpdateParking.fulfilled, (state, { payload }) => {\r\n        state.loading = false;\r\n        console.log(\"UpdateParking \", payload?.data);\r\n        state.UpdateParkingData = payload;\r\n      })\r\n\r\n      .addCase(UpdateParking.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      });\r\n  },\r\n});\r\n\r\nexport default Parking.reducer;\r\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/updatedGetSlices.js",["197","198","199"],[],"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nlet BearerToken = reactLocalStorage.get(\"Token\", false);\n\nexport const getupdatedDriver = createAsyncThunk(\"getDriver\", async (body, { rejectWithValue }) => {\n    try {\n        const response = await axios.get(\n            `${process.env.REACT_APP_BASE_URL}/api/loading-notice/get-driver?page=${body?.page == undefined ? 1 : body?.page}`, {\n            headers: {\n                Authorization: `Bearer ${BearerToken}`,\n            },\n        }\n        );\n        toast.success(response?.data?.message);\n        return response;\n    } catch (err) {\n        toast.error(err?.response?.data?.message);\n        return rejectWithValue(err);\n    }\n}\n);\n\nexport const getupdatedTruck = createAsyncThunk(\"getTruck\", async (body, { rejectWithValue }) => {\n    try {\n        const response = await axios.get(\n            `${process.env.REACT_APP_BASE_URL}/api/loading-notice/get-truck?page=${body?.page == undefined ? 1 : body?.page}`, {\n            headers: {\n                Authorization: `Bearer ${BearerToken}`,\n            },\n        }\n        );\n        toast.success(response?.data?.message);\n        return response;\n    } catch (err) {\n        toast.error(err?.response?.data?.message);\n        return rejectWithValue(err);\n    }\n}\n);\n\nexport const getupdatedProduct = createAsyncThunk(\"getClient\", async (body, { rejectWithValue }) => {\n    try {\n        const response = await axios.get(\n            `${process.env.REACT_APP_BASE_URL}/api/loading-notice/get-product?page=${body?.page == undefined ? 1 : body?.page}`, {\n            headers: {\n                Authorization: `Bearer ${BearerToken}`,\n            },\n        }\n        );\n        toast.success(response?.data?.message);\n        return response;\n    } catch (err) {\n        toast.error(err?.response?.data?.message);\n        return rejectWithValue(err);\n    }\n}\n);\n\nexport const updatedGetSlice = createSlice({\n    name: \"updatedGetApi\",\n    initialState: {\n        loading:false,\n        error:null,\n        getUpdatedDriverData:[],\n        getUpdatedTruckData:[],\n        getUpdatedProductData:[],\n    },\n\n    extraReducers: (builder) => {\n        builder\n    \n          // get Driver\n    \n          .addCase(getupdatedDriver.pending, (state) => {\n            state.loading = true;\n          })\n    \n          .addCase(getupdatedDriver.fulfilled, (state, { payload }) => {\n            state.loading = false;\n            console.log(\"getDriver \", payload?.data);\n            state.getUpdatedDriverData = payload?.data;\n          })\n    \n          .addCase(getupdatedDriver.rejected, (state, action) => {\n            state.loading = false;\n            state.error = action.error.message;\n          })\n\n          // get Truck\n    \n          .addCase(getupdatedTruck.pending, (state) => {\n            state.loading = true;\n          })\n    \n          .addCase(getupdatedTruck.fulfilled, (state, { payload }) => {\n            state.loading = false;\n            console.log(\"getDriver \", payload?.data);\n            state.getUpdatedTruckData = payload?.data;\n          })\n    \n          .addCase(getupdatedTruck.rejected, (state, action) => {\n            state.loading = false;\n            state.error = action.error.message;\n          })\n\n          // get Product\n    \n          .addCase(getupdatedProduct.pending, (state) => {\n            state.loading = true;\n          })\n    \n          .addCase(getupdatedProduct.fulfilled, (state, { payload }) => {\n            state.loading = false;\n            console.log(\"getDriver \", payload?.data);\n            state.getUpdatedProductData = payload?.data;\n          })\n    \n          .addCase(getupdatedProduct.rejected, (state, action) => {\n            state.loading = false;\n            state.error = action.error.message;\n          })\n        },\n\n});\n\nexport default updatedGetSlice.reducer;","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Authantication/SignUp/Signup.js",["200","201","202","203","204"],[],"/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Redux/slices/SignUp.js",["205"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { reactLocalStorage } from \"reactjs-localstorage\";\n\nlet BearerToken = reactLocalStorage.get(\"Token\", false)\n    \n// SignUp\n\nexport const SignUp = createAsyncThunk(\"SignUp\",async (body, { rejectWithValue }) => {\n  console.log(\"nbxjdx\")\n    try {\n      const response = await axios.post(`${process.env.REACT_APP_BASE_URL}user_auth/signup/`,body);\n      toast.success(\"Successful\");\n    //   reactLocalStorage.set(\"Token\",response?.data?.token?.original?.access_token);\n    \n      console.log(\"Permissions\",response)\n\n      return response;\n\n    } catch (err) {\n      toast.error(err?.response?.data?.message);\n      return rejectWithValue(err);\n    }\n  }\n); \n \n\n\n// Reducer\n\nexport const signUp = createSlice({\n  name: \"signUp\",\n  initialState: {\n    data: [],  \n    loading: false,\n    error: null,\n  },\n  reducers: {},\n\n  extraReducers: (builder) => {\n    builder\n      .addCase(SignUp.pending, (state) => {\n        state.loading = true;\n      })\n\n      .addCase(SignUp.fulfilled, (state, action) => {\n        state.loading = false;\n        state.data.push(action.payload);\n      })\n\n      .addCase(SignUp.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message;\n      }) \n\n      \n  },\n\n});\n\nexport default signUp.reducer;\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Authantication/OtpVerification/EmailOtpVerification.js",["206","207","208"],[],"import React, { useState } from \"react\";\nimport { reactLocalStorage } from 'reactjs-localstorage';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n// import Carosel from \"./Carosel\";\nimport OtpInput from 'react-otp-input';\nimport { useSelector } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport './emailOtpVerification.css'\n\n\nconst EmailOtpVerification = () => {\n\n    const [otpvalue, setOtpValue] = useState('')\n    // const products = useSelector(state => state.productReducer.products)\n    let navigate = useNavigate();\n\n    let EmailVerificationValue = reactLocalStorage.get('EmailVerification', true); \n    \n    const VerifyOtp = async () => {\n\n        //     await axios\n        //         .post(`${process.env.REACT_APP_BASE_URL}/verifyemailphoneotp`,\n        //             {\n        //                 phone_number: localStorageDetails.phoneNumber,\n        //                 mobile_otp: otpvalue\n        //             }\n        //         )\n        //         .then((response) => {\n        //             toast.success(\"Verified Phone successfully\");\n\n        //             navigate('/login')\n        //         })\n        //         .catch((err) => {\n        //             toast.warn(err.response.data.message);\n\n\n\n        //         });\n    };\n\n\n    const handleChange = (otpvalue) => setOtpValue(otpvalue);\n\n    const SendOtpFun = () => {\n            axios\n                .post(`${process.env.REACT_APP_BASE_URL}/resendotp`,\n                    {\n                        number: EmailVerificationValue,\n                    }\n                )\n                .then((response) => {\n                    toast.success(\"Please check your sms\");\n\n\n                })\n                .catch((err) => {\n                    toast.warn(err.response.data.message);\n\n\n\n                });\n    }\n\n    return (\n        <div className=\"conatiner-fluid\">\n            <div className=\"row m-0 p-0\">\n                <div className='col-md-7  carosel_bg d-md-block d-none' >\n                    <div className=\"accountslider-part\">\n                        {/* <Carosel /> */}\n                    </div>\n                </div>\n                <div className=\"col-md-5 col-sm-12 col-12 account-part\">\n                    <div className=\"right_part verifyphone-part \">\n                        <div className=\"sign_up \">Verification Code</div>\n                        <div className=\"sign_up_ \">Please type verification code send to</div>\n                        <div className=\"email_number\">\n                            {EmailVerificationValue}  </div>\n\n                        <div className=\"otp_container\">\n                            <OtpInput\n                                value={otpvalue}\n                                onChange={handleChange}\n                                numInputs={4}\n                                renderSeparator={<span>-</span>}\n                                renderInput={(props) => <input {...props} />}\n                            />\n                        </div>\n                        <div className=\"send_otp\"> <a href=\"#\" onClick={() => SendOtpFun()}> Resend OTP </a> </div>\n                        <div className=\"button_login_div\"> <button className=\"button_otp\" onClick={(e) => VerifyOtp(e)}> Verify OTP </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default EmailOtpVerification;\n","/home/shivam/Music/ExternlabsRestaurant/restaurent/src/Components/LoadingSpinner/LoadingSpinner.js",[],[],{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":8,"nodeType":"213","messageId":"214","endLine":1,"endColumn":12},{"ruleId":"211","severity":1,"message":"215","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":24},{"ruleId":"211","severity":1,"message":"216","line":3,"column":26,"nodeType":"213","messageId":"214","endLine":3,"endColumn":31},{"ruleId":"211","severity":1,"message":"217","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"218","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":21},{"ruleId":"211","severity":1,"message":"219","line":17,"column":10,"nodeType":"213","messageId":"214","endLine":17,"endColumn":20},{"ruleId":"211","severity":1,"message":"220","line":20,"column":9,"nodeType":"213","messageId":"214","endLine":20,"endColumn":13},{"ruleId":"221","severity":1,"message":"222","line":43,"column":70,"nodeType":"223","messageId":"224","endLine":43,"endColumn":71,"suggestions":"225"},{"ruleId":"221","severity":1,"message":"222","line":43,"column":86,"nodeType":"223","messageId":"224","endLine":43,"endColumn":87,"suggestions":"226"},{"ruleId":"211","severity":1,"message":"227","line":6,"column":5,"nodeType":"213","messageId":"214","endLine":6,"endColumn":16},{"ruleId":"228","severity":1,"message":"229","line":12,"column":105,"nodeType":"230","messageId":"231","endLine":12,"endColumn":107},{"ruleId":"228","severity":1,"message":"229","line":12,"column":158,"nodeType":"230","messageId":"231","endLine":12,"endColumn":160},{"ruleId":"232","severity":1,"message":"233","line":40,"column":46,"nodeType":"234","messageId":"235","endLine":40,"endColumn":48},{"ruleId":"211","severity":1,"message":"236","line":5,"column":10,"nodeType":"213","messageId":"214","endLine":5,"endColumn":21},{"ruleId":"232","severity":1,"message":"233","line":26,"column":48,"nodeType":"234","messageId":"235","endLine":26,"endColumn":50},{"ruleId":"228","severity":1,"message":"229","line":45,"column":76,"nodeType":"230","messageId":"231","endLine":45,"endColumn":78},{"ruleId":"228","severity":1,"message":"229","line":45,"column":129,"nodeType":"230","messageId":"231","endLine":45,"endColumn":131},{"ruleId":"232","severity":1,"message":"233","line":163,"column":35,"nodeType":"234","messageId":"235","endLine":163,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":164,"column":19,"nodeType":"230","messageId":"231","endLine":164,"endColumn":21},{"ruleId":"228","severity":1,"message":"237","line":165,"column":20,"nodeType":"230","messageId":"231","endLine":165,"endColumn":22},{"ruleId":"228","severity":1,"message":"237","line":166,"column":26,"nodeType":"230","messageId":"231","endLine":166,"endColumn":28},{"ruleId":"228","severity":1,"message":"237","line":167,"column":26,"nodeType":"230","messageId":"231","endLine":167,"endColumn":28},{"ruleId":"228","severity":1,"message":"237","line":168,"column":19,"nodeType":"230","messageId":"231","endLine":168,"endColumn":21},{"ruleId":"228","severity":1,"message":"229","line":38,"column":79,"nodeType":"230","messageId":"231","endLine":38,"endColumn":81},{"ruleId":"228","severity":1,"message":"229","line":39,"column":33,"nodeType":"230","messageId":"231","endLine":39,"endColumn":35},{"ruleId":"232","severity":1,"message":"233","line":74,"column":47,"nodeType":"234","messageId":"235","endLine":74,"endColumn":49},{"ruleId":"228","severity":1,"message":"229","line":97,"column":52,"nodeType":"230","messageId":"231","endLine":97,"endColumn":54},{"ruleId":"228","severity":1,"message":"229","line":97,"column":105,"nodeType":"230","messageId":"231","endLine":97,"endColumn":107},{"ruleId":"232","severity":1,"message":"233","line":132,"column":47,"nodeType":"234","messageId":"235","endLine":132,"endColumn":49},{"ruleId":"232","severity":1,"message":"233","line":159,"column":47,"nodeType":"234","messageId":"235","endLine":159,"endColumn":49},{"ruleId":"232","severity":1,"message":"233","line":187,"column":48,"nodeType":"234","messageId":"235","endLine":187,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":290,"column":35,"nodeType":"234","messageId":"235","endLine":290,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":291,"column":19,"nodeType":"230","messageId":"231","endLine":291,"endColumn":21},{"ruleId":"228","severity":1,"message":"237","line":292,"column":20,"nodeType":"230","messageId":"231","endLine":292,"endColumn":22},{"ruleId":"232","severity":1,"message":"233","line":331,"column":35,"nodeType":"234","messageId":"235","endLine":331,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":332,"column":27,"nodeType":"230","messageId":"231","endLine":332,"endColumn":29},{"ruleId":"228","severity":1,"message":"237","line":333,"column":28,"nodeType":"230","messageId":"231","endLine":333,"endColumn":30},{"ruleId":"228","severity":1,"message":"237","line":334,"column":26,"nodeType":"230","messageId":"231","endLine":334,"endColumn":28},{"ruleId":"228","severity":1,"message":"237","line":335,"column":22,"nodeType":"230","messageId":"231","endLine":335,"endColumn":24},{"ruleId":"228","severity":1,"message":"237","line":336,"column":26,"nodeType":"230","messageId":"231","endLine":336,"endColumn":28},{"ruleId":"228","severity":1,"message":"237","line":337,"column":25,"nodeType":"230","messageId":"231","endLine":337,"endColumn":27},{"ruleId":"228","severity":1,"message":"237","line":338,"column":29,"nodeType":"230","messageId":"231","endLine":338,"endColumn":31},{"ruleId":"228","severity":1,"message":"237","line":339,"column":29,"nodeType":"230","messageId":"231","endLine":339,"endColumn":31},{"ruleId":"228","severity":1,"message":"237","line":340,"column":36,"nodeType":"230","messageId":"231","endLine":340,"endColumn":38},{"ruleId":"228","severity":1,"message":"237","line":341,"column":27,"nodeType":"230","messageId":"231","endLine":341,"endColumn":29},{"ruleId":"232","severity":1,"message":"233","line":27,"column":47,"nodeType":"234","messageId":"235","endLine":27,"endColumn":49},{"ruleId":"228","severity":1,"message":"229","line":46,"column":77,"nodeType":"230","messageId":"231","endLine":46,"endColumn":79},{"ruleId":"228","severity":1,"message":"229","line":46,"column":130,"nodeType":"230","messageId":"231","endLine":46,"endColumn":132},{"ruleId":"232","severity":1,"message":"233","line":83,"column":48,"nodeType":"234","messageId":"235","endLine":83,"endColumn":50},{"ruleId":"228","severity":1,"message":"229","line":123,"column":84,"nodeType":"230","messageId":"231","endLine":123,"endColumn":86},{"ruleId":"228","severity":1,"message":"229","line":123,"column":137,"nodeType":"230","messageId":"231","endLine":123,"endColumn":139},{"ruleId":"228","severity":1,"message":"229","line":145,"column":76,"nodeType":"230","messageId":"231","endLine":145,"endColumn":78},{"ruleId":"228","severity":1,"message":"229","line":14,"column":76,"nodeType":"230","messageId":"231","endLine":14,"endColumn":78},{"ruleId":"228","severity":1,"message":"229","line":14,"column":129,"nodeType":"230","messageId":"231","endLine":14,"endColumn":131},{"ruleId":"232","severity":1,"message":"233","line":48,"column":48,"nodeType":"234","messageId":"235","endLine":48,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":73,"column":46,"nodeType":"234","messageId":"235","endLine":73,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":110,"column":75,"nodeType":"230","messageId":"231","endLine":110,"endColumn":77},{"ruleId":"228","severity":1,"message":"229","line":110,"column":128,"nodeType":"230","messageId":"231","endLine":110,"endColumn":130},{"ruleId":"232","severity":1,"message":"233","line":143,"column":48,"nodeType":"234","messageId":"235","endLine":143,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":168,"column":46,"nodeType":"234","messageId":"235","endLine":168,"endColumn":48},{"ruleId":"228","severity":1,"message":"229","line":201,"column":76,"nodeType":"230","messageId":"231","endLine":201,"endColumn":78},{"ruleId":"228","severity":1,"message":"229","line":201,"column":129,"nodeType":"230","messageId":"231","endLine":201,"endColumn":131},{"ruleId":"232","severity":1,"message":"233","line":234,"column":48,"nodeType":"234","messageId":"235","endLine":234,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":256,"column":46,"nodeType":"234","messageId":"235","endLine":256,"endColumn":48},{"ruleId":"232","severity":1,"message":"233","line":378,"column":35,"nodeType":"234","messageId":"235","endLine":378,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":379,"column":26,"nodeType":"230","messageId":"231","endLine":379,"endColumn":28},{"ruleId":"228","severity":1,"message":"237","line":380,"column":22,"nodeType":"230","messageId":"231","endLine":380,"endColumn":24},{"ruleId":"228","severity":1,"message":"237","line":381,"column":26,"nodeType":"230","messageId":"231","endLine":381,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":413,"column":35,"nodeType":"234","messageId":"235","endLine":413,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":414,"column":30,"nodeType":"230","messageId":"231","endLine":414,"endColumn":32},{"ruleId":"228","severity":1,"message":"237","line":415,"column":26,"nodeType":"230","messageId":"231","endLine":415,"endColumn":28},{"ruleId":"232","severity":1,"message":"233","line":449,"column":35,"nodeType":"234","messageId":"235","endLine":449,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":450,"column":19,"nodeType":"230","messageId":"231","endLine":450,"endColumn":21},{"ruleId":"228","severity":1,"message":"237","line":451,"column":26,"nodeType":"230","messageId":"231","endLine":451,"endColumn":28},{"ruleId":"228","severity":1,"message":"237","line":452,"column":22,"nodeType":"230","messageId":"231","endLine":452,"endColumn":24},{"ruleId":"228","severity":1,"message":"237","line":453,"column":26,"nodeType":"230","messageId":"231","endLine":453,"endColumn":28},{"ruleId":"228","severity":1,"message":"229","line":15,"column":77,"nodeType":"230","messageId":"231","endLine":15,"endColumn":79},{"ruleId":"228","severity":1,"message":"229","line":16,"column":33,"nodeType":"230","messageId":"231","endLine":16,"endColumn":35},{"ruleId":"232","severity":1,"message":"233","line":49,"column":48,"nodeType":"234","messageId":"235","endLine":49,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":74,"column":48,"nodeType":"234","messageId":"235","endLine":74,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":99,"column":48,"nodeType":"234","messageId":"235","endLine":99,"endColumn":50},{"ruleId":"232","severity":1,"message":"233","line":132,"column":35,"nodeType":"234","messageId":"235","endLine":132,"endColumn":37},{"ruleId":"228","severity":1,"message":"237","line":133,"column":23,"nodeType":"230","messageId":"231","endLine":133,"endColumn":25},{"ruleId":"228","severity":1,"message":"237","line":134,"column":24,"nodeType":"230","messageId":"231","endLine":134,"endColumn":26},{"ruleId":"228","severity":1,"message":"237","line":135,"column":23,"nodeType":"230","messageId":"231","endLine":135,"endColumn":25},{"ruleId":"228","severity":1,"message":"237","line":136,"column":20,"nodeType":"230","messageId":"231","endLine":136,"endColumn":22},{"ruleId":"228","severity":1,"message":"237","line":137,"column":22,"nodeType":"230","messageId":"231","endLine":137,"endColumn":24},{"ruleId":"228","severity":1,"message":"229","line":11,"column":96,"nodeType":"230","messageId":"231","endLine":11,"endColumn":98},{"ruleId":"228","severity":1,"message":"229","line":29,"column":95,"nodeType":"230","messageId":"231","endLine":29,"endColumn":97},{"ruleId":"228","severity":1,"message":"229","line":47,"column":97,"nodeType":"230","messageId":"231","endLine":47,"endColumn":99},{"ruleId":"228","severity":1,"message":"229","line":30,"column":45,"nodeType":"230","messageId":"231","endLine":30,"endColumn":47},{"ruleId":"238","severity":1,"message":"239","line":35,"column":6,"nodeType":"240","endLine":35,"endColumn":26,"suggestions":"241"},{"ruleId":"228","severity":1,"message":"229","line":38,"column":35,"nodeType":"230","messageId":"231","endLine":38,"endColumn":37},{"ruleId":"221","severity":1,"message":"222","line":54,"column":70,"nodeType":"223","messageId":"224","endLine":54,"endColumn":71,"suggestions":"242"},{"ruleId":"221","severity":1,"message":"222","line":54,"column":86,"nodeType":"223","messageId":"224","endLine":54,"endColumn":87,"suggestions":"243"},{"ruleId":"211","severity":1,"message":"227","line":6,"column":5,"nodeType":"213","messageId":"214","endLine":6,"endColumn":16},{"ruleId":"211","severity":1,"message":"244","line":7,"column":10,"nodeType":"213","messageId":"214","endLine":7,"endColumn":21},{"ruleId":"211","severity":1,"message":"245","line":16,"column":9,"nodeType":"213","messageId":"214","endLine":16,"endColumn":17},{"ruleId":"246","severity":1,"message":"247","line":89,"column":52,"nodeType":"248","endLine":89,"endColumn":93},"no-new-object",["249"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'useEffect' is defined but never used.","'useNavigate' is defined but never used.","'loadspiner' is assigned a value but never used.","'User' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["250","251"],["252","253"],"'BearerToken' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useLocation' is defined but never used.","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.","ArrayExpression",["254"],["255","256"],["257","258"],"'useSelector' is defined but never used.","'navigate' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-object-constructor",{"messageId":"259","fix":"260","desc":"261"},{"messageId":"262","fix":"263","desc":"264"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"262","fix":"266","desc":"264"},{"desc":"267","fix":"268"},{"messageId":"259","fix":"269","desc":"261"},{"messageId":"262","fix":"270","desc":"264"},{"messageId":"259","fix":"271","desc":"261"},{"messageId":"262","fix":"272","desc":"264"},"removeEscape",{"range":"273","text":"274"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"275","text":"276"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"277","text":"274"},{"range":"278","text":"276"},"Update the dependencies array to be: [SignUpSelectorData, navigate]",{"range":"279","text":"280"},{"range":"281","text":"274"},{"range":"282","text":"276"},{"range":"283","text":"274"},{"range":"284","text":"276"},[1319,1320],"",[1319,1319],"\\",[1335,1336],[1335,1335],[1344,1364],"[SignUpSelectorData, navigate]",[1799,1800],[1799,1799],[1815,1816],[1815,1815]]